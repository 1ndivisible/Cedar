(seed)build.type = seed
(seed)swf.debug = true
(seed)application.file = ${src.dir}/one/cedar/components/Seed.mxml

[output](seed)dir = ${assets.runtime.dir}/swf
[output](seed)swf.name = Seed
[output](seed)swf.width = 300
[output](seed)swf.height = 300
[output](seed)swf.framerate = ${swf.framerate}
[output](seed)swf = ${[output](seed)dir}/${[output](seed)swf.name}.swf

#Directory to copy deploy assets to
[output](seed)assets.runtime.dir = ${[output](seed)dir}/runtime

# RSLS [IMPORTANT]
#
# RSLs are defined in two places. The first set are the Signed RSLs (Flex 4+) hosted by Adobe. These are defined in:
# build/elephant/properties/flex.properties, though you shouldn't need to edit them (unless Adobe changes
# the SDK structure). However you will need to define the location of the Flex SDK in:
# build/elephant/properties/flex.properties.
# 
# The second set are defined here. They are your failover versions of the signed RSLs or both primary and
# failover versions of your own (unsigned) RSLs. It is strongly advised you use failover versions, otherwise
# if the primary versions are not available for any reason, you are shafted.

[output](seed)rsls.url = ${project.base.url}/deploy/seeder/runtime/rsls

[output](seed)rsls.framework.swz=${[output](seed)rsls.url}/framework_4.0.0.14159.swz
[output](seed)rsls.rpc.swz=${[output](seed)rsls.url}/rpc_4.0.0.14159.swz
[output](seed)rsls.osmf.swz=${[output](seed)rsls.url}/osmf_flex.4.0.0.13495.swz
[output](seed)rsls.tlf.swz=${[output](seed)rsls.url}/textLayout_1.0.0.595.swz
[output](seed)rsls.spark.swz=${[output](seed)rsls.url}/spark_4.0.0.14159.swz
[output](seed)rsls.spark-skins.swz=${[output](seed)rsls.url}/sparkskins_4.0.0.14159.swz
[output](seed)rsls.datavisualization.swz=${[output](seed)rsls.url}/datavisualization_4.0.0.14159.swz
[output](seed)policy.xml=${project.base.url}/crossdomain.xml

# Unfortunately, the only way I have found to pass the rsl arguments to mxmlc is as a long string, made up of
# -runtime-shared-library-path= then the arguments outlined below, separated by commas. I've asked Adobe about this,
# but I'm not holding my breath. If anyone has a better idea please let me know. The same pattern is repeated for 
# each RSL into a giant clusterfuck of a string.
# IMPORTANT: Note that there is a comma, but no spaces between each argument, though there is a single space between
# each set of arguments.
#
# Arguments:
#
#   1. location of swc 
#   2. runtime location of Primary RSL(swz/swf)
#   3. runtime location of Primary RSL policy file
#   4. runtime location of Failover RSL(swz/swf)
#   5. runtime location of Failover RSLpolicy file

rsl.arg.name=-runtime-shared-library-path=

[output](seed)framework.rsl.args = ${rsl.arg.name}${flex.sdk.framework.swc},${adobe.rsls.framework.swz},${adobe.policy.xml},${[output](seed)rsls.framework.swz},${[output](seed)policy.xml}
[output](seed)rpc.rsl.args = ${rsl.arg.name}${flex.sdk.rpc.swc},${adobe.rsls.rpc.swz},${adobe.policy.xml},${[output](seed)rsls.rpc.swz},${[output](seed)policy.xml}
[output](seed)osmf.rsl.args = ${rsl.arg.name}${flex.sdk.osmf.swc},${adobe.rsls.osmf.swz},${adobe.policy.xml},${[output](seed)rsls.osmf.swz},${[output](seed)policy.xml}
[output](seed)tlf.rsl.args = ${rsl.arg.name}${flex.sdk.tlf.swc},${adobe.rsls.tlf.swz},${adobe.policy.xml},${[output](seed)rsls.tlf.swz},${[output](seed)policy.xml}
[output](seed)spark.rsl.args = ${rsl.arg.name}${flex.sdk.spark.swc},${adobe.rsls.spark.swz},${adobe.policy.xml},${[output](seed)rsls.spark.swz},${[output](seed)policy.xml}
[output](seed)spark-skins.rsl.args = ${rsl.arg.name}${flex.sdk.spark-skins.swc},${adobe.rsls.spark-skins.swz},${adobe.policy.xml},${[output](seed)rsls.spark-skins.swz},${[output](seed)policy.xml}
[output](seed)datavisualization.rsl.args = ${rsl.arg.name}${flex.sdk.datavisualization.swc},${adobe.rsls.datavisualization.swz},${adobe.policy.xml},${[output](seed)rsls.datavisualization.swz},${[output](seed)policy.xml}

[output](seed)rsls.args = ${[output](seed)framework.rsl.args} ${[output](seed)rpc.rsl.args} ${[output](seed)osmf.rsl.args} ${[output](seed)tlf.rsl.args} ${[output](seed)spark.rsl.args} ${[output](seed)spark-skins.rsl.args} ${[output](seed)datavisualization.rsl.args}
